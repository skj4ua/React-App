{"version":3,"sources":["components/navbar.component.js","components/exercises-list.component.js","components/edit-exercise.component.js","components/create-exercise.component.js","components/create-user.component.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","Component","Exercise","props","exercise","username","description","duration","date","substring","_id","href","onClick","deleteExercise","ExercisesList","bind","state","exercises","axios","get","then","response","setState","data","catch","error","console","log","id","delete","this","filter","el","map","currentexercise","key","exerciseList","EditExercise","onChangeUsername","onChangeDescription","onChangeDuration","onChangeDate","onSubmit","Date","users","match","params","length","user","e","target","value","preventDefault","post","res","window","location","ref","required","onChange","type","selected","CreateExercise","CreateUser","App","path","exact","component","ExerciseList","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0PAGqBA,E,iLAEb,OACI,yBAAKC,UAAY,+CACL,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAW,gBAAxB,gBACA,yBAAKA,UAAY,4BACb,wBAAIA,UAAU,sBACV,wBAAIA,UAAU,eACd,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAW,YAAxB,cAEA,wBAAIA,UAAU,eACd,kBAAC,IAAD,CAAMC,GAAG,UAAUD,UAAW,YAA9B,wBAEA,wBAAIA,UAAU,eACd,kBAAC,IAAD,CAAMC,GAAG,QAAQD,UAAW,YAA5B,uB,GAdIE,a,wBCC9BC,EAAW,SAAAC,GAAK,OACpB,4BACE,4BAAKA,EAAMC,SAASC,UACpB,4BAAKF,EAAMC,SAASE,aACpB,4BAAKH,EAAMC,SAASG,UACpB,4BAAKJ,EAAMC,SAASI,KAAKC,UAAU,EAAE,KACrC,4BACE,kBAAC,IAAD,CAAMT,GAAI,SAASG,EAAMC,SAASM,KAAlC,QADF,MACuD,uBAAGC,KAAK,IAAIC,QAAS,WAAQT,EAAMU,eAAeV,EAAMC,SAASM,OAAjE,aAKtCI,E,YACnB,WAAYX,GAAQ,IAAD,8BACjB,4CAAMA,KAEDU,eAAiB,EAAKA,eAAeE,KAApB,gBAEtB,EAAKC,MAAQ,CAACC,UAAW,IALR,E,iFAQE,IAAD,OAClBC,IAAMC,IAAI,oCACPC,MAAK,SAAAC,GACJ,EAAKC,SAAS,CAAEL,UAAWI,EAASE,UAErCC,OAAM,SAACC,GACNC,QAAQC,IAAIF,Q,qCAIHG,GACbV,IAAMW,OAAO,mCAAmCD,GAC7CR,MAAK,SAAAC,GAAcK,QAAQC,IAAIN,EAASE,SAE3CO,KAAKR,SAAS,CACZL,UAAWa,KAAKd,MAAMC,UAAUc,QAAO,SAAAC,GAAE,OAAIA,EAAGtB,MAAQkB,S,qCAI5C,IAAD,OACb,OAAOE,KAAKd,MAAMC,UAAUgB,KAAI,SAAAC,GAC9B,OAAO,kBAAC,EAAD,CAAU9B,SAAU8B,EAAiBrB,eAAgB,EAAKA,eAAgBsB,IAAKD,EAAgBxB,W,+BAKxG,OACE,6BACE,gDACA,2BAAOX,UAAU,SACf,2BAAOA,UAAU,eACf,4BACE,wCACA,2CACA,wCACA,oCACA,yCAGJ,+BACI+B,KAAKM,sB,GAjDwBnC,a,iBCXtBoC,G,kBACnB,WAAYlC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDmC,iBAAmB,EAAKA,iBAAiBvB,KAAtB,gBACxB,EAAKwB,oBAAsB,EAAKA,oBAAoBxB,KAAzB,gBAC3B,EAAKyB,iBAAmB,EAAKA,iBAAiBzB,KAAtB,gBACxB,EAAK0B,aAAe,EAAKA,aAAa1B,KAAlB,gBACpB,EAAK2B,SAAW,EAAKA,SAAS3B,KAAd,gBAEhB,EAAKC,MAAQ,CACXX,SAAU,GACVC,YAAa,GACbC,SAAU,EACVC,KAAM,IAAImC,KACVC,MAAO,IAdQ,E,iFAkBE,IAAD,OAClB1B,IAAMC,IAAI,mCAAmCW,KAAK3B,MAAM0C,MAAMC,OAAOlB,IAClER,MAAK,SAAAC,GACJ,EAAKC,SAAS,CACZjB,SAAUgB,EAASE,KAAKlB,SACxBC,YAAae,EAASE,KAAKjB,YAC3BC,SAAUc,EAASE,KAAKhB,SACxBC,KAAM,IAAImC,KAAKtB,EAASE,KAAKf,WAGhCgB,OAAM,SAAUC,GACfC,QAAQC,IAAIF,MAGhBP,IAAMC,IAAI,gCACPC,MAAK,SAAAC,GACAA,EAASE,KAAKwB,OAAS,GACzB,EAAKzB,SAAS,CACZsB,MAAOvB,EAASE,KAAKU,KAAI,SAAAe,GAAI,OAAIA,EAAK3C,iBAI3CmB,OAAM,SAACC,GACNC,QAAQC,IAAIF,Q,uCAKDwB,GACfnB,KAAKR,SAAS,CACZjB,SAAU4C,EAAEC,OAAOC,U,0CAIHF,GAClBnB,KAAKR,SAAS,CACZhB,YAAa2C,EAAEC,OAAOC,U,uCAITF,GACfnB,KAAKR,SAAS,CACZf,SAAU0C,EAAEC,OAAOC,U,mCAIV3C,GACXsB,KAAKR,SAAS,CACZd,KAAMA,M,+BAIDyC,GACPA,EAAEG,iBAEF,IAAMhD,EAAW,CACfC,SAAUyB,KAAKd,MAAMX,SACrBC,YAAawB,KAAKd,MAAMV,YACxBC,SAAUuB,KAAKd,MAAMT,SACrBC,KAAMsB,KAAKd,MAAMR,MAGnBkB,QAAQC,IAAIvB,GAEZc,IAAMmC,KAAK,0CAA4CvB,KAAK3B,MAAM0C,MAAMC,OAAOlB,GAAIxB,GAChFgB,MAAK,SAAAkC,GAAG,OAAI5B,QAAQC,IAAI2B,EAAI/B,SAE/BgC,OAAOC,SAAW,M,+BAIlB,OACA,6BACE,iDACA,0BAAMd,SAAUZ,KAAKY,UACnB,yBAAK3C,UAAU,cACb,6CACA,4BAAQ0D,IAAI,YACRC,UAAQ,EACR3D,UAAU,eACVoD,MAAOrB,KAAKd,MAAMX,SAClBsD,SAAU7B,KAAKQ,kBAEbR,KAAKd,MAAM4B,MAAMX,KAAI,SAASe,GAC5B,OAAO,4BACLb,IAAKa,EACLG,MAAOH,GAAOA,QAM1B,yBAAKjD,UAAU,cACb,gDACA,2BAAQ6D,KAAK,OACTF,UAAQ,EACR3D,UAAU,eACVoD,MAAOrB,KAAKd,MAAMV,YAClBqD,SAAU7B,KAAKS,uBAGrB,yBAAKxC,UAAU,cACb,0DACA,2BACI6D,KAAK,OACL7D,UAAU,eACVoD,MAAOrB,KAAKd,MAAMT,SAClBoD,SAAU7B,KAAKU,oBAGrB,yBAAKzC,UAAU,cACb,yCACA,6BACE,kBAAC,IAAD,CACE8D,SAAU/B,KAAKd,MAAMR,KACrBmD,SAAU7B,KAAKW,iBAKrB,yBAAK1C,UAAU,cACb,2BAAO6D,KAAK,SAAST,MAAM,oBAAoBpD,UAAU,2B,GA5IzBE,cCDrB6D,E,YAEjB,WAAY3D,GAAO,IAAD,8BACd,4CAAMA,KACDmC,iBAAoB,EAAKA,iBAAiBvB,KAAtB,gBACzB,EAAKwB,oBAAsB,EAAKA,oBAAoBxB,KAAzB,gBAC3B,EAAKyB,iBAAmB,EAAKA,iBAAiBzB,KAAtB,gBACxB,EAAK0B,aAAgB,EAAKA,aAAa1B,KAAlB,gBACrB,EAAK2B,SAAW,EAAKA,SAAS3B,KAAd,gBAChB,EAAKC,MAAQ,CACTX,SAAU,GACVC,YAAc,GACdC,SAAU,EACVC,KAAO,IAAImC,KACXC,MAAM,IAZI,E,iFAeE,IAAD,OACf1B,IAAMC,IAAI,gCACTC,MAAK,SAAAC,GACCA,EAASE,KAAKwB,OAAO,GACpB,EAAKzB,SAAS,CACVsB,MAAMvB,EAASE,KAAKU,KAAI,SAAAe,GAAI,OAAIA,EAAK3C,YACrCA,SAAUgB,EAASE,KAAK,GAAGlB,cAKtCmB,OAAM,SAACC,GACJC,QAAQC,IAAIF,Q,uCAIHwB,GACbnB,KAAKR,SAAS,CACVjB,SAAS4C,EAAEC,OAAOC,U,0CAINF,GAChBnB,KAAKR,SAAS,CACVhB,YAAY2C,EAAEC,OAAOC,U,uCAIZF,GACbnB,KAAKR,SAAS,CACVhB,YAAY2C,EAAEC,OAAOC,U,uCAIZF,GACbnB,KAAKR,SAAS,CACVf,SAAS0C,EAAEC,OAAOC,U,mCAIb3C,GACTsB,KAAKR,SAAS,CACVd,KAAKA,M,+BAGJyC,GACLA,EAAEG,iBACF,IAAMhD,EAAS,CACXC,SAASyB,KAAKd,MAAMX,SACpBC,YAAYwB,KAAKd,MAAMV,YACvBC,SAASuB,KAAKd,MAAMT,SACpBC,KAAKsB,KAAKd,MAAMR,MAEpBkB,QAAQC,IAAIvB,GACZc,IAAMmC,KAAK,sCAAsCjD,GAC3CgB,MAAK,SAAAkC,GAAG,OAAI5B,QAAQC,IAAI2B,EAAI/B,SAE7BgC,OAAOC,SAAW,M,+BAGvB,OACI,6BACI,uDACA,0BAAMd,SAAUZ,KAAKY,UACjB,yBAAK3C,UAAU,cACX,4CACA,4BAAQ0D,IAAI,YACRC,UAAQ,EACR3D,UAAU,eACVoD,MAAOrB,KAAKd,MAAMX,SAClBsD,SAAU7B,KAAKQ,kBAEXR,KAAKd,MAAM4B,MAAMX,KAAI,SAAUe,GAC3B,OAAM,4BACNb,IAAMa,EACNG,MAASH,GAAOA,QAOhC,yBAAKjD,UAAU,cACzB,gDACA,2BAAQ6D,KAAK,OACTF,UAAQ,EACR3D,UAAU,eACVoD,MAAOrB,KAAKd,MAAMV,YAClBqD,SAAU7B,KAAKS,uBAGrB,yBAAKxC,UAAU,cACb,0DACA,2BACI6D,KAAK,OACL7D,UAAU,eACVoD,MAAOrB,KAAKd,MAAMT,SAClBoD,SAAU7B,KAAKU,oBAGrB,yBAAKzC,UAAU,cACb,yCACA,6BACE,kBAAC,IAAD,CACE8D,SAAU/B,KAAKd,MAAMR,KACrBmD,SAAU7B,KAAKW,iBAKrB,yBAAK1C,UAAU,cACb,2BAAO6D,KAAK,SAAST,MAAM,sBAAsBpD,UAAU,2B,GAhIzBE,aCFvB8D,E,YACZ,WAAY5D,GAAO,IAAD,8BACf,4CAAMA,KAEDmC,iBAAkB,EAAKA,iBAAiBvB,KAAtB,gBACvB,EAAK2B,SAAW,EAAKA,SAAS3B,KAAd,gBAEhB,EAAKC,MAAM,CACPX,SAAS,IAPE,E,8EAWD4C,GACbnB,KAAKR,SAAS,CACVjB,SAAS4C,EAAEC,OAAOC,U,+BAIjBF,GACLA,EAAEG,iBAEF,IAAMJ,EAAK,CACP3C,SAASyB,KAAKd,MAAMX,UAExBqB,QAAQC,IAAIqB,GACZ9B,IAAMmC,KAAK,kCAAkCL,GAC5C5B,MAAK,SAAAkC,GAAG,OAAI5B,QAAQC,IAAI2B,EAAI/B,SAC7BO,KAAKR,SAAS,CACVjB,SAAS,O,+BAIlB,OACI,6BACI,+CACA,0BAAMqC,SAAUZ,KAAKY,UACjB,yBAAK3C,UAAW,cACZ,4CACA,2BAAO6D,KAAO,OACdF,UAAQ,EACR3D,UAAU,eACVoD,MAAQrB,KAAKd,MAAMX,SACnBsD,SAAU7B,KAAKQ,oBAGnB,yBAAKvC,UAAW,cACZ,2BAAO6D,KAAK,SAAST,MAAO,cAC5BpD,UAAW,2B,GA/CKE,aCuBzB+D,MAff,WACE,OACE,kBAAC,IAAD,KACE,yBAAKjE,UAAU,aACf,kBAAC,EAAD,MACE,6BACA,kBAAC,IAAD,CAAOkE,KAAK,IAAIC,OAAK,EAACC,UAAWC,IACjC,kBAAC,IAAD,CAAOH,KAAK,YAAYE,UAAW9B,IACnC,kBAAC,IAAD,CAAO4B,KAAK,UAAUE,UAAWL,IACjC,kBAAC,IAAD,CAAOG,KAAK,QAAQE,UAAWJ,OCPnBM,QACW,cAA7Bd,OAAOC,SAASc,UAEe,UAA7Bf,OAAOC,SAASc,UAEhBf,OAAOC,SAASc,SAASzB,MACvB,2DCZN0B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzD,MAAK,SAAA0D,GACjCA,EAAaC,iB","file":"static/js/main.7f54b361.chunk.js","sourcesContent":["import React,{Component} from 'react'\r\nimport {Link} from \"react-router-dom\"\r\n\r\nexport default class Navbar extends Component{\r\n    render(){\r\n        return(\r\n            <nav className = \"navbar navbar-dark bg-dark navbar-expand-lg\">\r\n                        <Link to=\"/\" className =\"navbar-brand\">ExcerTracker</Link>\r\n                        <div className = \"collpase navbar-collapse\">\r\n                            <ul className=\"navbar-nav mr-auto\">\r\n                                <li className=\"navbar-item\">\r\n                                <Link to=\"/\" className =\"nav-link\">Exercises</Link>\r\n                                </li>\r\n                                <li className=\"navbar-item\">\r\n                                <Link to=\"/create\" className =\"nav-link\">Create Exercise log</Link>\r\n                                </li>\r\n                                <li className=\"navbar-item\">\r\n                                <Link to=\"/user\" className =\"nav-link\">Create user</Link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n             </nav>\r\n        )\r\n\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst Exercise = props => (\r\n  <tr>\r\n    <td>{props.exercise.username}</td>\r\n    <td>{props.exercise.description}</td>\r\n    <td>{props.exercise.duration}</td>\r\n    <td>{props.exercise.date.substring(0,10)}</td>\r\n    <td>\r\n      <Link to={\"/edit/\"+props.exercise._id}>edit</Link> | <a href=\"#\" onClick={() => { props.deleteExercise(props.exercise._id) }}>delete</a>\r\n    </td>\r\n  </tr>\r\n)\r\n\r\nexport default class ExercisesList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.deleteExercise = this.deleteExercise.bind(this)\r\n\r\n    this.state = {exercises: []};\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('http://localhost:5000/exercises/')\r\n      .then(response => {\r\n        this.setState({ exercises: response.data })\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  deleteExercise(id) {\r\n    axios.delete('http://localhost:5000/exercises/'+id)\r\n      .then(response => { console.log(response.data)});\r\n\r\n    this.setState({\r\n      exercises: this.state.exercises.filter(el => el._id !== id)\r\n    })\r\n  }\r\n\r\n  exerciseList() {\r\n    return this.state.exercises.map(currentexercise => {\r\n      return <Exercise exercise={currentexercise} deleteExercise={this.deleteExercise} key={currentexercise._id}/>;\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>Logged Exercises</h3>\r\n        <table className=\"table\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th>Username</th>\r\n              <th>Description</th>\r\n              <th>Duration</th>\r\n              <th>Date</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            { this.exerciseList() }\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}","import React,{ Component } from 'react';\r\nimport axios from 'axios';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nexport default class EditExercise extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.onChangeDuration = this.onChangeDuration.bind(this);\r\n    this.onChangeDate = this.onChangeDate.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    this.state = {\r\n      username: '',\r\n      description: '',\r\n      duration: 0,\r\n      date: new Date(),\r\n      users: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('http://localhost:5000/exercises/'+this.props.match.params.id)\r\n      .then(response => {\r\n        this.setState({\r\n          username: response.data.username,\r\n          description: response.data.description,\r\n          duration: response.data.duration,\r\n          date: new Date(response.data.date)\r\n        })   \r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      })\r\n\r\n    axios.get('http://localhost:5000/users/')\r\n      .then(response => {\r\n        if (response.data.length > 0) {\r\n          this.setState({\r\n            users: response.data.map(user => user.username),\r\n          })\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    })\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    this.setState({\r\n      description: e.target.value\r\n    })\r\n  }\r\n\r\n  onChangeDuration(e) {\r\n    this.setState({\r\n      duration: e.target.value\r\n    })\r\n  }\r\n\r\n  onChangeDate(date) {\r\n    this.setState({\r\n      date: date\r\n    })\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const exercise = {\r\n      username: this.state.username,\r\n      description: this.state.description,\r\n      duration: this.state.duration,\r\n      date: this.state.date\r\n    }\r\n\r\n    console.log(exercise);\r\n\r\n    axios.post('http://localhost:5000/exercises/update/' + this.props.match.params.id, exercise)\r\n      .then(res => console.log(res.data));\r\n\r\n    window.location = '/';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <div>\r\n      <h3>Edit Exercise Log</h3>\r\n      <form onSubmit={this.onSubmit}>\r\n        <div className=\"form-group\"> \r\n          <label>Username: </label>\r\n          <select ref=\"userInput\"\r\n              required\r\n              className=\"form-control\"\r\n              value={this.state.username}\r\n              onChange={this.onChangeUsername}>\r\n              {\r\n                this.state.users.map(function(user) {\r\n                  return <option \r\n                    key={user}\r\n                    value={user}>{user}\r\n                    </option>;\r\n                })\r\n              }\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\"> \r\n          <label>Description: </label>\r\n          <input  type=\"text\"\r\n              required\r\n              className=\"form-control\"\r\n              value={this.state.description}\r\n              onChange={this.onChangeDescription}\r\n              />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Duration (in minutes): </label>\r\n          <input \r\n              type=\"text\" \r\n              className=\"form-control\"\r\n              value={this.state.duration}\r\n              onChange={this.onChangeDuration}\r\n              />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Date: </label>\r\n          <div>\r\n            <DatePicker\r\n              selected={this.state.date}\r\n              onChange={this.onChangeDate}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <input type=\"submit\" value=\"Edit Exercise Log\" className=\"btn btn-primary\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n    )\r\n  }\r\n}","import React,{Component} from 'react'\r\nimport DatePicker from 'react-datepicker'\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport axios from 'axios'\r\nexport default class CreateExercise extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.onChangeUsername  = this.onChangeUsername.bind(this)\r\n        this.onChangeDescription = this.onChangeDescription.bind(this)\r\n        this.onChangeDuration = this.onChangeDuration.bind(this)\r\n        this.onChangeDate  = this.onChangeDate.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.state = {\r\n            username :'',\r\n            description : '',\r\n            duration: 0,\r\n            date : new Date(),\r\n            users:[]\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        axios.get('http://localhost:5000/users/')\r\n        .then(response =>{\r\n            if(response.data.length>0){\r\n                this.setState({\r\n                    users:response.data.map(user => user.username),\r\n                    username: response.data[0].username\r\n                })\r\n            }\r\n        })\r\n\r\n        .catch((error)=>{\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    onChangeUsername(e){\r\n        this.setState({\r\n            username:e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeDescription(e){\r\n        this.setState({\r\n            description:e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeDuration(e){\r\n        this.setState({\r\n            description:e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeDuration(e){\r\n        this.setState({\r\n            duration:e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeDate(date){\r\n        this.setState({\r\n            date:date\r\n        })\r\n    }\r\n    onSubmit(e){\r\n        e.preventDefault()\r\n        const exercise={\r\n            username:this.state.username,\r\n            description:this.state.description,\r\n            duration:this.state.duration,\r\n            date:this.state.date\r\n        }\r\n        console.log(exercise)\r\n        axios.post('http://localhost:5000/exercises/add',exercise)\r\n             .then(res => console.log(res.data))\r\n\r\n             window.location = '/';\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h3>Create New Exercise Log</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Username:</label>\r\n                        <select ref=\"userInput\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            value={this.state.username}\r\n                            onChange={this.onChangeUsername}>\r\n                            {\r\n                                this.state.users.map(function (user){\r\n                                    return<option \r\n                                    key= {user}\r\n                                    value = {user}>{user}\r\n                                    </option>\r\n                                })\r\n                            }\r\n\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\"> \r\n          <label>Description: </label>\r\n          <input  type=\"text\"\r\n              required\r\n              className=\"form-control\"\r\n              value={this.state.description}\r\n              onChange={this.onChangeDescription}\r\n              />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Duration (in minutes): </label>\r\n          <input \r\n              type=\"text\" \r\n              className=\"form-control\"\r\n              value={this.state.duration}\r\n              onChange={this.onChangeDuration}\r\n              />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Date: </label>\r\n          <div>\r\n            <DatePicker\r\n              selected={this.state.date}\r\n              onChange={this.onChangeDate}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <input type=\"submit\" value=\"Create Exercise Log\" className=\"btn btn-primary\" />\r\n        </div>             \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React,{Component} from 'react'\r\nimport axios from 'axios'\r\nexport default class CreateUser extends Component{\r\n         constructor(props){\r\n            super(props)\r\n\r\n            this.onChangeUsername= this.onChangeUsername.bind(this)\r\n            this.onSubmit = this.onSubmit.bind(this)\r\n\r\n            this.state={\r\n                username:''\r\n            }\r\n         }\r\n\r\n         onChangeUsername(e){\r\n             this.setState({\r\n                 username:e.target.value\r\n             })\r\n         }\r\n\r\n         onSubmit(e){\r\n             e.preventDefault()\r\n             \r\n             const user={\r\n                 username:this.state.username\r\n             }\r\n             console.log(user)\r\n             axios.post('http://localhost:5000/users/add',user)\r\n             .then(res => console.log(res.data))\r\n             this.setState({\r\n                 username:''\r\n             })\r\n         }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h3>Create New User</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className =\"form-group\">\r\n                        <label>Username:</label>\r\n                        <input type = \"text\"\r\n                        required\r\n                        className=\"form-control\"\r\n                        value= {this.state.username}\r\n                        onChange={this.onChangeUsername}\r\n                        />\r\n                    </div>\r\n                    <div className =\"form-group\">\r\n                        <input type=\"submit\" value =\"Create User\" \r\n                        className =\"btn btn-primary\"/>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport {BrowserRouter as Router,Route} from 'react-router-dom'\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nimport Navbar from \"./components/navbar.component\"\nimport ExerciseList from \"./components/exercises-list.component\"\nimport EditExercise from \"./components/edit-exercise.component\"\nimport CreateExercise from \"./components/create-exercise.component\"\nimport CreateUser from \"./components/create-user.component\"\n\nfunction App() {\n  return(\n    <Router>\n      <div className=\"container\">\n      <Navbar/>\n        <br/>\n        <Route path=\"/\" exact component={ExerciseList}/>\n        <Route path=\"/edit/:id\" component={EditExercise}/>\n        <Route path=\"/create\" component={CreateExercise}/>\n        <Route path=\"/user\" component={CreateUser}/>\n        </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}